// <auto-generated />
using System;
using Counselors_Connect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Counselors_Connect.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Counselors_Connect.Models.Counselor", b =>
                {
                    b.Property<int>("CounselorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CounselorID");

                    b.ToTable("Counselors", (string)null);

                    b.HasData(
                        new
                        {
                            CounselorID = 1,
                            Name = "John Doe",
                            Password = "password",
                            Username = "johndoe"
                        },
                        new
                        {
                            CounselorID = 2,
                            Name = "Brody Van Eperen",
                            Password = "BrodyV1",
                            Username = "bvaneperen"
                        });
                });

            modelBuilder.Entity("Counselors_Connect.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("AdvisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            AdvisorName = "Mr. Brown",
                            FirstName = "Alice",
                            Grade = 10,
                            LastName = "Smith"
                        },
                        new
                        {
                            StudentID = 2,
                            AdvisorName = "Mrs. Green",
                            FirstName = "Bob",
                            Grade = 11,
                            LastName = "Johnson"
                        },
                        new
                        {
                            StudentID = 3,
                            AdvisorName = "Mr. White",
                            FirstName = "Charlie",
                            Grade = 12,
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("Counselors_Connect.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicID");

                    b.ToTable("Topics", (string)null);

                    b.HasData(
                        new
                        {
                            TopicID = 1,
                            TopicName = "Academic"
                        },
                        new
                        {
                            TopicID = 2,
                            TopicName = "Career"
                        },
                        new
                        {
                            TopicID = 3,
                            TopicName = "Personal"
                        });
                });

            modelBuilder.Entity("Counselors_Connect.Models.Visit", b =>
                {
                    b.Property<int>("VisitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitID"));

                    b.Property<int>("CounselorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("File")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<bool>("ParentsCalled")
                        .HasColumnType("bit");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("VisitID");

                    b.HasIndex("CounselorID");

                    b.HasIndex("StudentID");

                    b.ToTable("Visits", (string)null);

                    b.HasData(
                        new
                        {
                            VisitID = 1,
                            CounselorID = 1,
                            Date = new DateTime(2024, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Initial counseling session",
                            File = false,
                            FilePath = "http://example.com/files/1",
                            Length = 30,
                            ParentsCalled = true,
                            StudentID = 1
                        },
                        new
                        {
                            VisitID = 2,
                            CounselorID = 1,
                            Date = new DateTime(2024, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Follow-up session",
                            File = true,
                            FilePath = "http://example.com/files/2",
                            Length = 45,
                            ParentsCalled = false,
                            StudentID = 2
                        },
                        new
                        {
                            VisitID = 3,
                            CounselorID = 2,
                            Date = new DateTime(2024, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Career guidance",
                            File = true,
                            FilePath = "http://example.com/files/3",
                            Length = 60,
                            ParentsCalled = true,
                            StudentID = 3
                        });
                });

            modelBuilder.Entity("Counselors_Connect.Models.VisitTopic", b =>
                {
                    b.Property<int>("VisitID")
                        .HasColumnType("int");

                    b.Property<int>("TopicID")
                        .HasColumnType("int");

                    b.HasKey("VisitID", "TopicID");

                    b.HasIndex("TopicID");

                    b.ToTable("VisitTopics", (string)null);

                    b.HasData(
                        new
                        {
                            VisitID = 1,
                            TopicID = 1
                        },
                        new
                        {
                            VisitID = 1,
                            TopicID = 2
                        },
                        new
                        {
                            VisitID = 2,
                            TopicID = 3
                        },
                        new
                        {
                            VisitID = 3,
                            TopicID = 1
                        },
                        new
                        {
                            VisitID = 3,
                            TopicID = 3
                        });
                });

            modelBuilder.Entity("Counselors_Connect.Models.Visit", b =>
                {
                    b.HasOne("Counselors_Connect.Models.Counselor", null)
                        .WithMany("Visits")
                        .HasForeignKey("CounselorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Counselors_Connect.Models.Student", null)
                        .WithMany("Visits")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Counselors_Connect.Models.VisitTopic", b =>
                {
                    b.HasOne("Counselors_Connect.Models.Topic", "Topic")
                        .WithMany("VisitTopics")
                        .HasForeignKey("TopicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Counselors_Connect.Models.Visit", "Visit")
                        .WithMany("VisitTopics")
                        .HasForeignKey("VisitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("Counselors_Connect.Models.Counselor", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Counselors_Connect.Models.Student", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Counselors_Connect.Models.Topic", b =>
                {
                    b.Navigation("VisitTopics");
                });

            modelBuilder.Entity("Counselors_Connect.Models.Visit", b =>
                {
                    b.Navigation("VisitTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
